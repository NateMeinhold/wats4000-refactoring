{"version":3,"sources":["webpack:///src/C:/Users/Nate/SeattleU/projects/4000/wats4000-refactoring/src/src/App.vue","app.54ded239.css","webpack:///src/components/C:/Users/Nate/SeattleU/projects/4000/wats4000-refactoring/src/components/src/components/WeatherSummary.vue","webpack:///src/components/C:/Users/Nate/SeattleU/projects/4000/wats4000-refactoring/src/components/src/components/WeatherConditions.vue","webpack:///src/views/C:/Users/Nate/SeattleU/projects/4000/wats4000-refactoring/src/views/src/views/CitySearch.vue","webpack:///src/views/C:/Users/Nate/SeattleU/projects/4000/wats4000-refactoring/src/views/src/views/CurrentWeather.vue","webpack:///src/views/C:/Users/Nate/SeattleU/projects/4000/wats4000-refactoring/src/views/src/views/Forecast.vue"],"names":[],"mappings":"AAcA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,aAAA,CACA,eAAA,CACA,YCZA,CDcA,KACA,eAAA,CACA,SAAA,CACA,QCZA,CDcA,KACA,SAAA,CACA,aAAA,CACA,SAAA,CACA,eCZA,CCMA,iCACA,oBAAA,CACA,WDiBA,CEdA,oBACA,WAAA,CACA,kBFkBA,CEhBA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UFkBA,CEhBA,oBACA,kBAAA,CACA,kBFkBA,CEhBA,0BACA,WFkBA,CGAA,wDACA,SAAA,CACA,oBAAA,CACA,WHWA,CGTA,wCACA,eHWA,CGRA,oBACA,oBAAA,CACA,SHUA,CGRA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UHUA,CGRA,iCACA,oBAAA,CACA,WHUA,CGRA,oBACA,WAAA,CACA,kBHUA,CGRA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UHUA,CGRA,oBACA,kBAAA,CACA,kBHUA,CGRA,0BACA,WHUA,CGPA,mBACA,aHSA,CI7DA,4BACA,SAAA,CACA,oBAAA,CACA,WJiEA,CI/DA,wCACA,eJiEA,CI9DA,oBACA,oBAAA,CACA,SJgEA,CI9DA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YJgEA,CI9DA,iCACA,oBAAA,CACA,WJgEA,CI9DA,oBACA,WAAA,CACA,kBJgEA,CI9DA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UJgEA,CI9DA,oBACA,kBAAA,CACA,kBJgEA,CI9DA,0BACA,WJgEA,CI9DA,mBACA,aJgEA,CKlFA,4BACA,SAAA,CACA,oBAAA,CACA,WLsFA,CKpFA,wCACA,eLsFA,CKnFA,oBACA,oBAAA,CACA,SLqFA,CKnFA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,ULqFA,CKlFA,mBACA,aLoFA,CKlFA,iCACA,oBAAA,CACA,WLoFA,CKlFA,oBACA,WAAA,CACA,kBLoFA,CKlFA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,ULoFA,CKlFA,oBACA,kBAAA,CACA,kBLoFA,CKlFA,0BACA,WLoFA","file":"app.54ded239.css","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>Weather Service</h1>\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'app'\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  padding: 20px;\r\n}\r\nhtml {\r\n  background: #666;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\nbody {\r\n  width: 75%;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  background: #fff;\r\n}\r\n/* dl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n} */\r\n</style>\r\n","\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  padding: 20px;\n}\nhtml {\r\n  background: #666;\r\n  padding: 0;\r\n  margin: 0;\n}\nbody {\r\n  width: 75%;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  background: #fff;\n}\r\n/* dl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n} */\r\n\n\n.weatherSummary[data-v-1dbc3b3f] {\n  display: inline-block;\n  width: 100px;\n}\n\n\ndl[data-v-2f44831b] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-2f44831b] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-2f44831b] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-2f44831b]::after {\n  content: \":\";\n}\n\n\n.errors li[data-v-6f41b36a] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\n\n\n.errors li[data-v-3e5f8091] {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\n}\nh1[data-v-3e5f8091], h2[data-v-3e5f8091] {\r\n  font-weight: normal;\n}\nul[data-v-3e5f8091] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-3e5f8091] {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\n}\n.weatherSummary[data-v-3e5f8091] {\r\n  display: inline-block;\r\n  width: 100px;\n}\ndl[data-v-3e5f8091] {\r\n  padding: 5px;\r\n  background: #e8e8e8;\n}\ndt[data-v-3e5f8091] {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\n}\ndd[data-v-3e5f8091] {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-3e5f8091]::after {\r\n  content: \":\";\n}\na[data-v-3e5f8091] {\r\n  color: #42b983;\n}\r\n\n\n.errors li[data-v-e952bfae] {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\n}\nh1[data-v-e952bfae], h2[data-v-e952bfae] {\r\n  font-weight: normal;\n}\nul[data-v-e952bfae] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-e952bfae] {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\n}\n.weatherSummary[data-v-e952bfae] {\r\n  display: inline-block;\r\n  width: 100px;\n}\ndl[data-v-e952bfae] {\r\n  padding: 5px;\r\n  background: #e8e8e8;\n}\ndt[data-v-e952bfae] {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\n}\ndd[data-v-e952bfae] {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-e952bfae]::after {\r\n  content: \":\";\n}\na[data-v-e952bfae] {\r\n  color: #42b983;\n}\r\n\n\n.errors li[data-v-5d25a38a] {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\n}\nh1[data-v-5d25a38a], h2[data-v-5d25a38a] {\r\n  font-weight: normal;\n}\nul[data-v-5d25a38a] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-5d25a38a] {\r\n  display: inline-block;\r\n  width: 200px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\n}\na[data-v-5d25a38a] {\r\n  color: #42b983;\n}\n.weatherSummary[data-v-5d25a38a] {\r\n  display: inline-block;\r\n  width: 100px;\n}\ndl[data-v-5d25a38a] {\r\n  padding: 5px;\r\n  background: #e8e8e8;\n}\ndt[data-v-5d25a38a] {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\n}\ndd[data-v-5d25a38a] {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-5d25a38a]::after {\r\n  content: \":\";\n}\r\n\n\n/*# sourceMappingURL=app.54ded239.css.map*/","<template>\r\n  <div>\r\n    <div v-for=\"weatherSummary in weatherData\" class=\"weatherSummary\" :key=\"weatherSummary.id\">\r\n      <img v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\" v-bind:alt=\"weatherSummary.main\">\r\n      <br>\r\n      <b>{{ weatherSummary.main }}</b>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WeatherSummary',\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    weatherData: {}\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .weatherSummary {\r\n    display: inline-block;\r\n    width: 100px;\r\n  }\r\n</style>","<template>\r\n  <div>\r\n    <dl>\r\n      <dt v-if=\"conditions.temp != conditions.temp_min\">Current Temperature</dt>\r\n      <dd v-if=\"conditions.temp != conditions.temp_min\">{{ conditions.temp }}%</dd>\r\n      <dt>Humidity</dt>\r\n      <dd>{{ conditions.humidity }}%</dd>\r\n      <dt>High</dt>\r\n      <dd>{{ conditions.temp_max }}&deg;F</dd>\r\n      <dt>Low</dt>\r\n      <dd>{{ conditions.temp_min }}&deg;F</dd>\r\n    </dl>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WeatherConditions',\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    conditions: {}\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  dl {\r\n    padding: 5px;\r\n    background: #e8e8e8;\r\n  }\r\n  dt {\r\n    float: left;\r\n    clear: left;\r\n    width: 120px;\r\n    text-align: right;\r\n    font-weight: bold;\r\n    color: blue;\r\n  }\r\n  dd {\r\n    margin: 0 0 0 130px;\r\n    padding: 0 0 0.5em 0;\r\n  }\r\n  dt::after {\r\n    content: \":\";\r\n  }\r\n</style>","<template>\r\n  <div>\r\n    <h2>City Search</h2>\r\n    <form v-on:submit.prevent=\"getCities\">\r\n        <p>Enter city name: <input type=\"text\" v-model=\"query\" placeholder=\"Paris\"> <button type=\"submit\">Go</button></p>\r\n    </form>\r\n    <ul class=\"cities\" v-if=\"results && results.list.length > 0\">\r\n        <li v-for=\"(city,index) in results.list\" :key=\"index\">\r\n            <h2>{{ city.name }}, {{ city.sys.country }}</h2>\r\n            <p><router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: city.id } }\">View Current Weather</router-link></p>\r\n\r\n            <weather-summary v-bind:weatherData=\"city.weather\"></weather-summary>\r\n\r\n              <weather-conditions v-bind:conditions=\"city.main\"></weather-conditions>\r\n         \r\n        </li>\r\n    </ul>\r\n\r\n    <error-list v-bind:errorList=\"errors\"></error-list>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport {API} from '@/common/api';\r\nimport WeatherSummary from '@/components/WeatherSummary';\r\nimport WeatherConditions from '@/components/WeatherConditions';\r\nimport ErrorList from '@/components/ErrorList'\r\n\r\nexport default {\r\n  name: 'CitySearch',\r\n  data () {\r\n    return {\r\n      results: null,\r\n      errors: [],\r\n      query: ''\r\n    }\r\n  },\r\n  methods: {\r\n    getCities: function () {\r\n      \r\n      API.get('find', {\r\n        params: {\r\n            q: this.query\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.results = response.data\r\n      })\r\n      .catch(error => {\r\n        this.errors.push(error)\r\n      });\r\n    }\r\n  },\r\n  components: {\r\n    'weather-summary': WeatherSummary,\r\n    'weather-conditions': WeatherConditions,\r\n    'error-list': ErrorList, \r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.errors li {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\r\n}\r\nh1, h2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\r\n}\r\n.weatherSummary {\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\ndl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n\r\n\r\n","<template>\r\n  <div>\r\n    <h2>Current Weather <span v-if=\"weatherData\"> for {{ weatherData.name }}, {{weatherData.sys.country }}</span></h2>\r\n    <p>\r\n      <router-link to=\"/\">Home</router-link> |\r\n      <router-link v-bind:to=\"{ name: 'Forecast', params: { cityId: $route.params.cityId } }\">View 5-Day Forecast</router-link>\r\n    </p>\r\n    <div v-if=\"weatherData && errors.length===0\">\r\n\r\n      \r\n      <weather-summary v-bind:weatherData=\"weatherData.weather\"></weather-summary>\r\n     \r\n      <weather-conditions v-bind:conditions=\"weatherData.main\"></weather-conditions>\r\n   \r\n    </div>\r\n     <error-list v-bind:errorList=\"errors\"></error-list>\r\n \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport {API} from '@/common/api';\r\nimport WeatherSummary from '@/components/WeatherSummary'\r\nimport WeatherConditions from '@/components/WeatherConditions'\r\nimport ErrorList from '@/components/ErrorList'\r\n\r\nexport default {\r\n  name: 'CurrentWeather',\r\n  data () {\r\n    return {\r\n      weatherData: null,\r\n      errors: [],\r\n      query: ''\r\n    }\r\n  },\r\n  created () {\r\n      API.get('weather', {\r\n        params: {\r\n             id: this.$route.params.cityId,\r\n        }\r\n      })\r\n    .then(response => {\r\n      this.weatherData = response.data\r\n    })\r\n    .catch(error => {\r\n      this.errors.push(error)\r\n    });\r\n  },\r\n  components: {\r\n    'weather-summary': WeatherSummary,\r\n    'weather-conditions': WeatherConditions,\r\n    'error-list': ErrorList, \r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.errors li {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\r\n}\r\nh1, h2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n}\r\n.weatherSummary {\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\ndl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n\r\n\r\n","<template>\r\n  <div>\r\n    <h2>Five Day Hourly Forecast <span v-if=\"weatherData\"> for {{ weatherData.city.name }}, {{weatherData.city.country }}</span></h2>\r\n    <p>\r\n      <router-link to=\"/\">Home</router-link> |\r\n      <router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: $route.params.cityId } }\">Current Weather <span v-if=\"weatherData\"> for {{ weatherData.city.name }}, {{weatherData.city.country }}</span></router-link>\r\n    </p>\r\n\r\n    <ul v-if=\"weatherData && errors.length===0\" class=\"forecast\">\r\n      <li v-for=\"(forecast,index) in weatherData.list\" :key=\"index\">\r\n        <h3>{{ forecast.dt|formatDate }}</h3>\r\n      \r\n        <weather-summary v-bind:weatherData=\"forecast.weather\"></weather-summary>\r\n      \r\n        <weather-conditions v-bind:conditions=\"forecast.main\"></weather-conditions>\r\n      \r\n      </li>\r\n    </ul>\r\n    <error-list v-bind:errorList=\"errors\"></error-list>\r\n   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport {API} from '@/common/api';\r\nimport WeatherSummary from '@/components/WeatherSummary';\r\nimport WeatherConditions from '@/components/WeatherConditions';\r\nimport ErrorList from '@/components/ErrorList'\r\n\r\nexport default {\r\n  name: 'Forecast',\r\n  data () {\r\n    return {\r\n      weatherData: null,\r\n      errors: [],\r\n      query: ''\r\n    }\r\n  },\r\n  created () {\r\n      API.get('forecast', {\r\n        params: {\r\n             id: this.$route.params.cityId,\r\n        }\r\n      })\r\n    .then(response => {\r\n      this.weatherData = response.data\r\n    })\r\n    .catch(error => {\r\n      this.errors.push(error)\r\n    });\r\n  },\r\n  filters: {\r\n    formatDate: function (timestamp){\r\n      let date = new Date(timestamp * 1000);\r\n      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n      const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      //let weekday = date.getDay();\r\n      let daynum = date.getDate();\r\n      let month = date.getMonth();\r\n\r\n      let hour = date.getHours();\r\n      if (hour === 12) {\r\n        hour = 'Noon';\r\n      } else if (hour === 0) {\r\n        hour = 'Midnight';\r\n      } else if (hour > 12) {\r\n        hour = hour - 12 + 'PM';\r\n      } else if (hour < 12) {\r\n        hour = hour + 'AM';\r\n      }\r\n      //let year = date.getFullYear();\r\n      return `${ months[month] } ${ daynum } @ ${ hour }`;\r\n    }\r\n  },\r\n  components: { \r\n    'weather-summary': WeatherSummary,\r\n    'weather-conditions': WeatherConditions,\r\n    'error-list': ErrorList, \r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.errors li {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\r\n}\r\nh1, h2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  width: 200px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n.weatherSummary {\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\ndl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n}\r\n</style>\r\n\r\n\r\n"]}